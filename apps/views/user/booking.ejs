<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Danh Sách Đặt Phòng Chờ Xác Nhận</title>
  <style>
    #booking-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    #booking-table th, #booking-table td {
      padding: 10px;
      border: 1px solid #ddd;
    }

    #booking-table th {
      background-color: #f4f4f4;
    }

    .cancel-button {
      padding: 5px 10px;
      background-color: #f44336;
      color: white;
      border: none;
      cursor: pointer;
    }

    .cancel-button:hover {
      background-color: #e53935;
    }
  </style>
</head>
<body>

  <h2>Danh Sách Đặt Phòng Chờ Xác Nhận</h2>

  <table id="booking-table">
    <thead>
      <tr>
        <th>Tên Homestay</th>
        <th>Ngày Đến</th>
        <th>Ngày Đi</th>
        <th>Tổng Tiền</th>
        <th>Trạng Thái</th>
        <th>Hành Động</th>
      </tr>
    </thead>
    <tbody id="booking-list">
      <!-- Dữ liệu booking sẽ được hiển thị ở đây -->
    </tbody>
  </table>

  <script>
    // Hàm tải danh sách booking của người dùng
    async function loadPendingBookings() {
      const token = localStorage.getItem('token');
      if (!token) {
        alert('Vui lòng đăng nhập.');
        return;
      }

      try {
        const response = await fetch('/api/bookings/pendingbyuser', {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + token
          }
        });

        if (!response.ok) {
          throw new Error('Lỗi khi tải danh sách đặt phòng chờ xác nhận.');
        }

        const bookings = await response.json();
        const bookingList = document.getElementById('booking-list');
        bookingList.innerHTML = '';

        if (bookings.length === 0) {
          bookingList.innerHTML = '<tr><td colspan="6">Không có đặt phòng chờ xác nhận.</td></tr>';
        }

        bookings.forEach(booking => {
          const row = document.createElement('tr');
          row.dataset.bookingId = booking.booking_id;

          row.innerHTML = `
            <td>${booking.homestay_name}</td>
            <td>${booking.check_in}</td>
            <td>${booking.check_out}</td>
            <td>${booking.total_amount}</td>
            <td>${booking.status}</td>
            <td>
              <button class="cancel-button" onclick="cancelBooking(${booking.booking_id})">Hủy Đặt Phòng</button>
            </td>
          `;
          bookingList.appendChild(row);
        });
      } catch (error) {
        alert(error.message);
      }
    }

    // Hàm hủy đặt phòng
 async function cancelBooking(bookingId) {
  const token = localStorage.getItem('token');
  if (!token) {
    alert('Vui lòng đăng nhập.');
    return;
  }

  if (!confirm('Bạn có chắc chắn muốn hủy đặt phòng này?')) {
    return; // Nếu người dùng không xác nhận, thoát khỏi hàm
  }

  try {
    const response = await fetch(`/api/bookings/${bookingId}/status`, {
      method: 'PUT',
      headers: {
        'Authorization': 'Bearer ' + token,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ status: 'cancelled' }) // Truyền trạng thái hủy
    });

    const responseBody = await response.json();

    if (!response.ok) {
      console.error('API Error:', responseBody.message || 'Unknown error');
      throw new Error(responseBody.message || 'Unknown error');
    }

    alert(responseBody.message); // Hiển thị thông báo từ API
    loadPendingBookings(); // Tải lại danh sách đặt phòng
  } catch (error) {
    console.error('Frontend Error:', error.message);
    alert('Lỗi khi hủy đặt phòng: ' + error.message);
  }
}

    // Tải danh sách booking khi trang được tải
    document.addEventListener('DOMContentLoaded', loadPendingBookings);
  </script>

</body>
</html>