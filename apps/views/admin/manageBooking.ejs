<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Booking Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }
    
        .container {
            display: flex;
            min-height: 100vh;
            flex-direction: column;
        }
    
        .header {
            background-color: #4CAF50;
            color: white;
            text-align: center;
            padding: 20px 0;
            margin: 0;
        }
    
        .content {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 20px;
            box-sizing: border-box;
        }
    
        h1 {
            text-align: center;
            color: #4CAF50;
            margin-bottom: 20px;
        }
    
        table {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            border-collapse: collapse;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }
    
        table th, table td {
            padding: 12px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }
    
        table th {
            background-color: #4CAF50;
            color: white;
            text-transform: uppercase;
        }
    
        table td {
            background-color: #fff;
        }
    
        .btn-cancel {
            padding: 8px 12px;
            background-color: #f44336;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
    
        .btn-cancel:hover {
            background-color: #d32f2f;
        }
    
        .pagination-btns {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            max-width: 1200px;
            margin: 20px auto 0;
        }
    
        .pagination-btns button {
            padding: 10px 20px;
            border: none;
            background-color: #4CAF50;
            color: white;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
    
        .pagination-btns button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
    
        .pagination-btns button:hover:not(:disabled) {
            background-color: #388e3c;
        }
    </style>
    
</head>
<body>
    <h1>Quản Lí Booking</h1>

    <table>
        <thead>
            <tr>
                <th>ID Booking</th>
                <th>Full Name</th>
                <th>Check-in</th>
                <th>Check-out</th>
                <th>Total Amount</th>
                <th>Homestay Name</th>
                <th>Host Name</th>
                <th>Adults</th>
                <th>Children</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="bookingTableBody">
            <!-- Data will be populated here by JavaScript -->
        </tbody>
    </table>

    <div class="pagination-btns">
        <button id="prevPageBtn" disabled>Previous</button>
        <span id="paginationInfo"></span>
        <button id="nextPageBtn">Next</button>
    </div>

    <script>
        let currentPage = 1;
        const pageSize = 10;
        let allBookings = [];

        function fetchBookings() {
            const token = localStorage.getItem('token');
            if (!token) {
                alert('Authentication token not found.');
                return;
            }

            fetch('/api/bookingslist', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                allBookings = data.data;
                renderBookings();
            })
            .catch(error => {
                console.error('Error fetching booking data:', error);
                alert('Error fetching booking data');
            });
        }

        function renderBookings() {
            const offset = (currentPage - 1) * pageSize;
            const currentBookings = allBookings.slice(offset, offset + pageSize);

            const tableBody = document.getElementById('bookingTableBody');
            tableBody.innerHTML = '';

            currentBookings.forEach(booking => {
                const row = `<tr>
                    <td>${booking.booking_id}</td>
                    <td>${booking.guest_name}</td>
                    <td>${booking.check_in}</td>
                    <td>${booking.check_out}</td>
                    <td>${booking.total_amount}</td>
                    <td>${booking.homestay_name}</td>
                    <td>${booking.host_name}</td>
                    <td>${booking.adults_count}</td>
                    <td>${booking.children_count}</td>
                    <td>
                        <button class="btn-cancel" onclick="cancelBooking(${booking.booking_id})">Cancel</button>
                    </td>
                </tr>`;
                tableBody.innerHTML += row;
            });

            const totalPages = Math.ceil(allBookings.length / pageSize);
            document.getElementById('paginationInfo').textContent = `Page ${currentPage} of ${totalPages}`;
            document.getElementById('prevPageBtn').disabled = currentPage === 1;
            document.getElementById('nextPageBtn').disabled = totalPages === currentPage;
        }

        function cancelBooking(bookingId) {
            const token = localStorage.getItem('token');
            if (!token) {
                alert('Authentication token not found.');
                return;
            }

            const confirmCancel = confirm("Are you sure you want to cancel this booking?");
            if (!confirmCancel) return;

            fetch(`/api/bookings/${bookingId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    alert('Booking canceled successfully');
                    fetchBookings();
                } else {
                    alert('Error canceling booking');
                }
            })
            .catch(error => {
                console.error('Error canceling booking:', error);
                alert('Error canceling booking');
            });
        }

        document.getElementById('nextPageBtn').addEventListener('click', function() {
            const totalPages = Math.ceil(allBookings.length / pageSize);
            if (currentPage < totalPages) {
                currentPage++;
                renderBookings();
            }
        });

        document.getElementById('prevPageBtn').addEventListener('click', function() {
            if (currentPage > 1) {
                currentPage--;
                renderBookings();
            }
        });

        fetchBookings();
    </script>
</body>
</html>
